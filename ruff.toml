# Ruff configuration for AWS Retro Game Challenge

# Set Python version
target-version = "py311"

# Set line length
line-length = 88

# Exclude files and directories
exclude = [".git", ".venv", "__pycache__", "build", "dist"]

[lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PL",  # pylint
    "RUF", # ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",    # line too long (handled by formatter)
    "PLR0913", # too many arguments
    "PLR2004", # magic value comparison
    "E722",    # bare except (sometimes needed)
    "PLC0415", # import not at top of file (needed for circular imports)
    "PLR0912", # too many branches
    "PLR1714", # merge multiple comparisons
    "PLW0603", # global statement
    "EXE001",  # shebang present but file not executable
]

# Configure specific rules
[lint.per-file-ignores]
"tests/*" = [
    "S101",    # assert statements are ok in tests
    "PLR2004", # magic values are ok in tests
    "F405",    # undefined names from star imports are ok in tests
    "F403",    # star imports are ok in tests
    "ARG002",  # unused arguments are ok in tests (e.g., fixtures)
]
"src/game.py" = [
    "F405", # undefined names from star imports
    "F403", # star imports
]
"src/sprites.py" = [
    "F405", # undefined names from star imports
    "F403", # star imports
]
"src/entities.py" = [
    "F405", # undefined names from star imports
    "F403", # star imports
]
"src/sounds.py" = [
    "PLR0915", # too many statements in _generate_arpeggio_track
]

[lint.isort]
known-first-party = ["config", "entities", "game", "sprites", "sounds"]

[lint.mccabe]
max-complexity = 10

[lint.pylint]
max-args = 6
max-branches = 12
max-returns = 6
max-statements = 50
